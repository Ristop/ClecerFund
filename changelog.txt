Detailed change log for future reference

$ - rails new CleverFund

$ - git init
$ - git add -a
$ - git commit -a -m "Initial commit"
$ - git remote add origin https://github.com/Ristop/CleverFund.git
$ - git push --set-upstream origin master

$ - rails s
$ - rails generate controller Notice index

Aug 16 2016 -
	1.1 Generated controller for notice
	1.2 set up a super basic page template
	1.3 Tried to get Gmail API to work ( it did not :( )

Aug 17 2016 -
	2.1 Got Gmail API working! woo! Can now get messages from email account
		(gmail_reader.rb)
	2.2 Sorted out only SEB automailer messages (gmail_reader.rb)
	2.3 Cleverfund now makes a difference between different types of mails
		(broneering, laekumine, v√§ljaminek)
	2.4 Created a notice class for holding information about the notice
		(Notice.rb)
	2.5 Created a parser for different types of messages (notice_parser.rb)
	2.6 Right now gmail_reader.rb reads all emails, sorts out sebautomailer ones
	 	and sends them to parser, parser then parses the mail accordingly and
		returns Notice Object to gmail_reader.rb

Aug 19 2016 -
	3.1 Removed Notice.rb from /lib because model class (app/models/notice.rb)
		already did all the work I needed it to do out of the box :O. Cool
	3.2 notice_parser.rb now creates notice model and saves it to database!
		Just like magic!
	3.3 Renamed files to use lowercase and _ (Coz its the Ruby way..)
	3.4 Created a view (index.html.erb) for the button to scan for new notices
		from Gmail API.	Thing works like this:
		3.4.1 /notice contains a button that goes to /notice/scan
		3.4.2 /notice/scan route refers to a scan method in NoticeController
		3.4.3 /scan method calls the gmail_reader.rb
	3.5 Figured out how to view the stuff in database, rails console! Notice.all
	 	shows all the entries and Notice.delete_all well... deletes them :)

Aug 22 2016 -
	4.1 Used AJAX to query (get_notice.js) new data from Notice model and update
	 	index page.
	4.2 Updated NoticeController with getnew method that gets new notices that
		are not yet queried.
	4.3 Updated NoticeController with isupdated method that returns number of
		new notices that are not yet queried.
	4.4 AJAX uses REST to query number of new notices, every 3 seconds. If there
		are any, it uses REST request to get that number of new messages.
	4.5 Refactored gmail_reader.rb. User is authenicated only once and one
		service is needed for the queries.

Aug 23, 24, 25 2016 -
	5.1 Created two separate tables in index view for sorted and new notices
	5.2 Added a date column to Notice model to store the notices epoch formatted
		date
	5.3 Updated NoticeController to use two different sets of notices: sorted
		and new notices.
	5.4 Refactored and commented NoticeController
	5.5 Changed the format that the date is displayed to the view
	5.6 Used jquery plugin tablesorter to apply sorting functionality to both
		of the tables.
	5.7 Added button to every table row to sort or unsort given notice. Meaning:
		notice will change tables.
	5.8 Stored the last notices data in db model AppVariable as baseline for
		scanning new notices.
